---
# Hadoop users and paths.

# HDFS home directories will be made for these users.
users: [DA, BI]

# Paths where Hadoop will store data.
hadoop_conf_dir: /etc/hadoop/conf.ansible
# You can run into permissions issues if the namenode, hdfs, or yarn share a common parent dir.
# E.g., hdfs creates /data/hadoop hdfs:hdfs 700, but then yarn can't read /data/hadoop/yarn
dfs_namenode_name_dir: 
- /mnt/nfs/name
- /mnt/1/name
- /mnt/2/name
dfs_datanode_data_dir:
- /mnt/1/data
- /mnt/2/data
- /mnt/3/data
- /mnt/4/data
- /mnt/5/data
- /mnt/6/data
- /mnt/7/data
- /mnt/8/data
- /mnt/9/data
- /mnt/10/data
yarn_nodemanager_local_dirs:
- /mnt/1/yarn/local
- /mnt/2/yarn/local
- /mnt/3/yarn/local
- /mnt/4/yarn/local
- /mnt/5/yarn/local
- /mnt/6/yarn/local
- /mnt/7/yarn/local
- /mnt/8/yarn/local
- /mnt/9/yarn/local
- /mnt/10/yarn/local
yarn_nodemanager_log_dirs:
- /mnt/1/yarn/log
- /mnt/2/yarn/log
- /mnt/3/yarn/log
- /mnt/4/yarn/log
- /mnt/5/yarn/log
- /mnt/6/yarn/log
- /mnt/7/yarn/log
- /mnt/8/yarn/log
- /mnt/9/yarn/log
- /mnt/10/yarn/log


# Shouldn't need to change these.
is_namenode: "'$ansible_hostname' == '$namenode'"
is_resource_manager: "'$ansible_hostname' == '$resource_manager'"
is_history_server: "'$ansible_hostname' == '$history_server'"
is_worker: "'hadoop-nodes' in group_names"
